{"version":3,"sources":["colorsArray.js","App.js","reportWebVitals.js","index.js"],"names":["colorsArray","quotes","App","useState","qoute","setQuote","author","setAuthor","setRandomNumber","quotesArray","setQuotesArray","accentColors","setAccentColors","fetchQuotes","url","a","fetch","response","json","parsedJSON","console","log","useEffect","className","style","backgroundColor","id","color","href","encodeURI","icon","faTwitter","onClick","randomInt","Math","floor","length","random","quote","getRandomQuote","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAqDeA,G,MArDK,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,Y,uBC7CIC,EAAS,yIAyDAC,MAvDf,WACE,MAA0BC,mBAAS,mIAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,wBAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwCJ,mBAAS,GAAjD,mBAAqBK,GAArB,WACA,EAAsCL,mBAAS,MAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KACA,EAAwCP,mBAAS,WAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACKC,MAAMF,GADX,cACZG,EADY,gBAEOA,EAASC,OAFhB,OAEZC,EAFY,OAGlBT,EAAeS,EAAWlB,QAC1BmB,QAAQC,IAAIF,GAJM,2CAAH,sDAmBjB,OAZAG,qBAAU,WACRT,EAAYZ,KACX,CAACA,IAWF,qBAAKsB,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAaC,MAAO,CAAEC,gBAAiBd,GAAzD,SACE,sBAAKe,GAAG,YAAYF,MAAO,CAAEG,MAAOhB,GAApC,UACE,oBAAGe,GAAG,OAAN,UACE,0CACCtB,KAEH,oBAAGsB,GAAG,SAAN,eAAkBpB,KAClB,sBAAKiB,UAAU,SAAf,UACE,mBACEA,UAAU,MACVK,KAAMC,UAAU,0CAAD,OAA2CzB,EAA3C,6BACZE,IACHoB,GAAG,cACHF,MAAO,CAAEC,gBAAiBd,GAL5B,SAOE,cAAC,IAAD,CAAiBmB,KAAMC,QAEzB,wBAAQR,UAAU,MAAMG,GAAG,YAAYM,QAAS,kBA3BnC,WACrB,IAAIC,EAAYC,KAAKC,MAAM1B,EAAY2B,OAASF,KAAKG,UACrD7B,EAAgByB,GAChB5B,EAASI,EAAYwB,GAAWK,OAChC/B,EAAUE,EAAYwB,GAAW3B,QACjCM,EAAgBZ,EAAYiC,IAsBkCM,IAAkBf,MAAO,CAAEC,gBAAiBd,GAAlG,kCCxCG6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.91081ee3.chunk.js","sourcesContent":["const colorsArray = [\r\n  \"#FF6633\",\r\n  \"#FFB399\",\r\n  \"#FF33FF\",\r\n  \"#FFFF99\",\r\n  \"#00B3E6\",\r\n  \"#E6B333\",\r\n  \"#3366E6\",\r\n  \"#999966\",\r\n  \"#99FF99\",\r\n  \"#B34D4D\",\r\n  \"#80B300\",\r\n  \"#809900\",\r\n  \"#E6B3B3\",\r\n  \"#6680B3\",\r\n  \"#66991A\",\r\n  \"#FF99E6\",\r\n  \"#CCFF1A\",\r\n  \"#FF1A66\",\r\n  \"#E6331A\",\r\n  \"#33FFCC\",\r\n  \"#66994D\",\r\n  \"#B366CC\",\r\n  \"#4D8000\",\r\n  \"#B33300\",\r\n  \"#CC80CC\",\r\n  \"#66664D\",\r\n  \"#991AFF\",\r\n  \"#E666FF\",\r\n  \"#4DB3FF\",\r\n  \"#1AB399\",\r\n  \"#E666B3\",\r\n  \"#33991A\",\r\n  \"#CC9999\",\r\n  \"#B3B31A\",\r\n  \"#00E680\",\r\n  \"#4D8066\",\r\n  \"#809980\",\r\n  \"#E6FF80\",\r\n  \"#1AFF33\",\r\n  \"#999933\",\r\n  \"#FF3380\",\r\n  \"#CCCC00\",\r\n  \"#66E64D\",\r\n  \"#4D80CC\",\r\n  \"#9900B3\",\r\n  \"#E64D66\",\r\n  \"#4DB380\",\r\n  \"#FF4D4D\",\r\n  \"#99E6E6\",\r\n  \"#6666FF\",\r\n];\r\n\r\nexport default colorsArray;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport colorsArray from \"./colorsArray\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nconst quotes = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nfunction App() {\n  const [qoute, setQuote] = useState(\"I have been impressed with the urgency of doing. Knowing is not enough; we must apply. Being willing is not enough; we must do.\");\n  const [author, setAuthor] = useState(\"andLeonardo da Vinci\");\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quotesArray, setQuotesArray] = useState(null);\n  const [accentColors, setAccentColors] = useState(\"#1AFF33\");\n\n  const fetchQuotes = async (url) => {\n    const response = await fetch(url);\n    const parsedJSON = await response.json();\n    setQuotesArray(parsedJSON.quotes);\n    console.log(parsedJSON);\n  };\n\n  useEffect(() => {\n    fetchQuotes(quotes);\n  }, [quotes]);\n\n  const getRandomQuote = () => {\n    let randomInt = Math.floor(quotesArray.length * Math.random());\n    setRandomNumber(randomInt);\n    setQuote(quotesArray[randomInt].quote);\n    setAuthor(quotesArray[randomInt].author);\n    setAccentColors(colorsArray[randomInt]);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" style={{ backgroundColor: accentColors }}>\n        <div id=\"quote-box\" style={{ color: accentColors }}>\n          <p id=\"text\">\n            <span>&ldquo;</span>\n            {qoute}\n          </p>\n          <p id=\"author\">- {author}</p>\n          <div className=\"footer\">\n            <a\n              className=\"btn\"\n              href={encodeURI(`https://twitter.com/intent/tweet/?text=${qoute} \n              -${author}`)}\n              id=\"tweet-quote\"\n              style={{ backgroundColor: accentColors }}\n            >\n              <FontAwesomeIcon icon={faTwitter} />\n            </a>\n            <button className=\"btn\" id=\"new-quote\" onClick={() => getRandomQuote()} style={{ backgroundColor: accentColors }}>\n              New Quote\n            </button>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}